http://security.stackexchange.com/questions/8964/trying-to-make-a-django-based-site-use-https-only-not-sure-if-its-secure
http://blog.startifact.com/posts/older/what-is-pythonic.html
http://nedbatchelder.com/code/coverage/


X:\Github\Dewas\Pythonidae>python -V
Python 2.7.8

X:\Github\Dewas\Pythonidae>pip install webtest django-webtest
Downloading/unpacking webtest


python manage.py celery worker
python manage.py celery beat

X:\Github\Dewas\Pythonidae>pip freeze
Django==1.7
Markdown==2.5.1
MySQL-Connector-Python==1.2.2
South==1.0
WebOb==1.4
WebTest==2.0.16
amqp==1.4.6
anyjson==0.3.3
backports.ssl-match-hostname==3.4.0.2
beautifulsoup4==4.3.2
billiard==3.3.0.18
celery==3.1.16
celerymon==1.0.3
certifi==14.05.14
colorama==0.3.2
coverage==3.7.1
django-autofixture==0.9.1
django-celery==3.1.16
django-common-helpers==0.6.2
django-cron==0.3.4
django-filter==0.8
django-webtest==1.7.7
djangorestframework==2.4.3
docutils==0.11
kombu==3.0.23
mando==0.3.2
mccabe==0.2.1
pytz==2014.7
radon==1.1.1
six==1.8.0
tornado==4.0.2
virtualenv==1.11.4
waitress==0.8.9

list the dependencies and thier versions:
X:\Github\Dewas\Pythonidae>pip freeze

Stored in requirements.txt file and to install these packages used for this project
Run: to the new development enviroment of the project
X:\Github\Dewas\Pythonidae>pip install -r requirements.txt


TESTING
X:\Github\Dewas\Pythonidae>manage.py test yaas.tests.AuctionModelTest


SEARCHING
X:\Github\Dewas\Pythonidae>pip install django-haystack

# Static directory definition
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, '/static/'),
)

# Data fixtures directory definition
FIXTURES_DIRS = (
    os.path.join(BASE_DIR, '/fixtures/'),
)



{{ a.get_absolute_url }}


X:\Github\Dewas\Pythonidae>coverage report
Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
Pythonidae\__init__                           0      0   100%
Pythonidae\settings                          21      0   100%
Pythonidae\urls                               6      0   100%
Pythonidae\wsgi                               5      5     0%
manage                                        6      0   100%
templates\__init__                            3      3     0%
yaas\__init__                                 0      0   100%
yaas\admin                                   39      2    95%
yaas\forms                                   27      4    85%
yaas\migrations\0001_initial                  7      0   100%
yaas\migrations\0002_auto_20141011_1408       7      0   100%
yaas\migrations\0003_auto_20141011_1412       6      0   100%
yaas\migrations\0004_auto_20141011_1600       6      0   100%
yaas\migrations\0005_auto_20141012_0057       6      0   100%
yaas\migrations\0006_auto_20141012_1236       6      0   100%
yaas\migrations\0007_auto_20141013_1327       6      0   100%
yaas\migrations\0008_auto_20141013_2135       6      0   100%
yaas\migrations\0009_auto_20141013_2317       6      0   100%
yaas\migrations\__init__                      0      0   100%
yaas\models                                  95     37    61%
yaas\static\__init__                          3      3     0%
yaas\tests                                   86     18    79%
yaas\views                                  130    103    21%
-------------------------------------------------------------
TOTAL                                       477    175    63%



      <!--
                <form class="navbar-form navbar-right" action="{% url 'set_language' %}" method="post">
                    {% csrf_token %}
                        <input name="next" type="hidden" value="{{ redirect_to }}" />
                        <select name="language">
                        {% get_language_info_list for LANGUAGES as languages %}
                        {% for language in languages %}
                        <option value="{{ language.code }}"{% if language.code == LANGUAGE_CODE %} selected="selected"{% endif %}>
                            {{ language.name_local }} ({{ language.code }})
                        </option>
                        {% endfor %}
                        </select>
                        <input type="submit" value="Go" />
                </form>

-->


celery worker --app=yaas.yaascelery:app

celery -A yaas.yaascelery worker --loglevel=info

wsgi.py
#os.environ["CELERY_LOADER"] = "django"
celery.py
from __future__ import absolute_import
""" Development of Web Applications and Web Services

"""

__author__ = "Dawit Nida (dawit.nida@abo.fi)"
__date__ = "Date: 27.10.2014"
__version__ = "Version: "

import os
from celery import Celery
from django.conf import settings

# set the default Django settings module for the 'celery' program.
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Pythonidae.settings')
app = Celery('Pythonidae')
# Using a string here means the worker will not have to
# pickle the object when using Windows.
app.config_from_object('django.conf:settings')
app.autodiscover_tasks(lambda: settings.INSTALLED_APPS)
@app.task(bind=True)
def debug_task(self):
    print('Request: {0!r}'.format(self.request))
setting.py
import djcelery
djcelery.setup_loader()


manage.py runcrons yaas.crontask.CronAuctionBan
manage.py runcrons yaas.crontask.ResolveAuction


ood [ [{"fields": {"description": "dafds", "product_category": 2, "timestamp": null, "initial_price": "9", "seller": 12, "name": "trea"}, "model": "y
aas.product", "pk": null}]
prod [ [{"fields": {"description": "dafds", "product_category": 2, "timestamp": null, "initial_price": "9", "seller": 12, "name": "trea"}, "model": "yaa
s.product", "pk": null}]